import{_ as i,p as n,q as a,Y as s,s as e}from"./framework-aa5c4115.js";const d={},t=s(`<h2 id="共同点" tabindex="-1"><a class="header-anchor" href="#共同点" aria-hidden="true">#</a> 共同点</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>在 vue 中 v-show 与 v-if 的作用效果是相同的，都能控制元素在页面是否显示 。
	当表达式都为 false 时，都不会占据页面位置
	当表达式结果为 true 时，都会占据页面的位置
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h2><ol><li><strong>控制手段：</strong> v-show隐藏则是为该元素添加css--display:none，dom元素依旧还在。v-if显示隐藏是将dom元素整个添加或删除</li><li><strong>编译过程：</strong> v-if切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件；v-show只是简单的基于css切换</li><li><strong>编译条件：</strong> v-if是真正的条件渲染，它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。只有渲染条件为假时，并不做操作，直到为真才渲染</li></ol>`,4),r=e("div",{class:"custom-container danger"},[e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M10 10l4 4m0-4l-4 4"})])]),e("p",{class:"custom-container-title"},"DANGER"),e("ol",null,[e("li",null,"v-show 由false变为true的时候不会触发组件的生命周期"),e("li",null,"v-if由false变为true的时候，触发组件的beforeCreate、create、beforeMount、mounted钩子，由true变为false的时候触发组件的beforeDestory、destoryed方法")])],-1),l=s(`<h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>v-if 与 v-show 都能控制dom元素在页面的显示
v-if 相比 v-show 开销更大的（直接操作dom节点增加与删除）
如果需要非常频繁地切换，则使用 v-show 较好
如果在运行时条件很少改变，则使用 v-if 较好
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>v-show 是通过控制display属性来进行dom的显示与隐藏
v-if 是真正意义上的条件渲染，为true是渲染（dom存在），为false时不存在（dom不存在）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[t,r,l];function c(v,u){return n(),a("div",null,o)}const m=i(d,[["render",c],["__file","06.v-ifyuv-showdequbie.html.vue"]]);export{m as default};
