import{_ as n,p as s,q as a,Y as p}from"./framework-aa5c4115.js";const t={},e=p(`<h1 id="盒模型" tabindex="-1"><a class="header-anchor" href="#盒模型" aria-hidden="true">#</a> 盒模型</h1><p>CSS可以将元素设置一个个矩形的盒子,将元素设置成矩形盒子后,对页面的布局就是将不同盒子放在不同的位置</p><p>每个盒子由以下几部分组成</p><blockquote><p>内容区(content)</p><p>内边距(padding)</p><p>边框(border)</p><p>外边距(margin)</p></blockquote><h3 id="内容区-width和height" tabindex="-1"><a class="header-anchor" href="#内容区-width和height" aria-hidden="true">#</a> 内容区(width和height)</h3><blockquote><p>width和height属性用来设置内容区域的宽和高,也就是元素可渲染内容区的宽高.</p><p>内容默认左上角原点开始排列.</p><p><strong>块级元素默认宽度是父级宽度100%,行内元素宽度默认由里面内容撑开</strong></p><p><strong>所有元素的高度不设置的情况下在默认情况下由内容撑开，也就是随内容多少的变化而变化</strong></p></blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/*
  内容区的大小由width和height两个属性来设置
  width设置内容区的宽度,height设置内容区的高度
  元素里的所有子元素和文本内容都在内容区排列
*/</span>
&lt;div class=<span class="token string">&quot;box&quot;</span>&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="边框区-border" tabindex="-1"><a class="header-anchor" href="#边框区-border" aria-hidden="true">#</a> 边框区(border)</h3><blockquote><p>块级元素的border的作用是在元素的内容区和padding区外加上一个边框线.</p><p>通常用来分隔内容,使其不至于散步到背景的边界,</p><p><strong>复合写法:</strong></p><p>​ broder:宽度 种类 颜色;</p></blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">.box</span><span class="token punctuation">{</span>
       <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
       <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
       <span class="token property">boder</span><span class="token punctuation">:</span>10px solid green<span class="token punctuation">;</span><span class="token comment">/*通过该属性可以同时设置所有的边框相关样式,没有顺序*/</span>
       <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
&lt;div class=<span class="token string">&quot;box&quot;</span>&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>除了boder以外可以四个边单独指定 border-xxx</p><p>​ border-top:宽度 种类 颜色;</p><p>​ border-bottom:宽度 种类 颜色;</p><p>​ border-left:宽度 种类 颜色;</p><p>​ border-right:宽度 种类 颜色;</p></blockquote><p><strong>border的单例型写法</strong></p><blockquote><p>border-width边框宽度 默认是3px,</p><p>可以指定四个方向值的边框宽度</p><p>​ 值的情况</p><p>​ 四个值: 上 右 下 左</p><p>​ 三个值: 上 左右 下</p><p>​ 两个值 上下 左右</p><p>​ 一个值 上下左右</p><p>除了boder-width以外还有</p><p>​ boder-<strong>xxx</strong>-width</p><p>​ <strong>xxx</strong>可以是top,bottom,left,right</p><p>​ 用来单独指定某一个边的宽度</p><p>border-style边框样式</p><p>​ solid实线</p><p>​ double双边框</p><p>​ dashed虚线</p><p>​ dotted圆点</p><p>​ <strong>默认是none</strong>没有</p><p>​ 可以指定四个方向值的边框样式</p><p>​ 值的情况</p><p>​ 四个值: 上 右 下 左</p><p>​ 三个值: 上 左右 下</p><p>​ 两个值 上下 左右</p><p>​ 一个值 上下左右</p><p>除了boder-style以外还有 boder-<strong>xxx</strong>-style</p><p>​ <strong>xxx</strong>可以是top,bottom,left,right</p><p>​ 用来单独指定某一个边狂的样式</p><p>border-color边框颜色</p><p>​ 默认是color文字颜色一致;</p><p>​ transparent;透明 跟父元素的背景颜色保持一致</p><p>​ 可以指定四个方向值的边框颜色;</p><p>除了border-color以外还有 border-<strong>xxx</strong>-color</p><p>​ <strong>xxx</strong>可以是top,bottom,left,right</p><p>​ 用来单独指定某一个边狂的颜色</p></blockquote><p><strong>三边有边框而一边没有设置技巧</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border</span><span class="token punctuation">:</span>1px solid #000<span class="token punctuation">;</span>
<span class="token property">border-top</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>利用border画一个三角形</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span><span class="token punctuation">{</span>
	<span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token comment">/*元素的宽高都为0,设置不同的边框颜色即可看出每个边框方向分为了四个三角形*/</span>
    <span class="token property">height</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>
	<span class="token property">border-width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>
	<span class="token property">border-color</span><span class="token punctuation">:</span> pink blue yellow green<span class="token punctuation">;</span><span class="token comment">/*此时可以通过设置不同的方向的透明从而画出三角形*/</span>
	<span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
&lt;div class=<span class="token string">&quot;box&quot;</span>&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="内边距-padding" tabindex="-1"><a class="header-anchor" href="#内边距-padding" aria-hidden="true">#</a> 内边距(padding)</h3><blockquote><p><strong>内容区和边框之间的距离就是内边距,不能用来放内容</strong></p><p>一共有四个方向的内边距</p><p>​ padding-top 上内边距</p><p>​ padding-bottom 下内边距</p><p>​ padding-left 左内边距</p><p>​ padding-right 右内边距</p><p>内边距的设置会影响到盒子的大小</p><p>内边距的颜色继承背景颜色,不能单独设置内边距颜色</p></blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span><span class="token punctuation">{</span>
	  	<span class="token property">width</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>
    	<span class="token property">height</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>
    	<span class="token property">border</span><span class="token punctuation">:</span>1px solid red<span class="token punctuation">;</span>
    	<span class="token property">padding</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span><span class="token comment">/*内边距的简写写法*/</span>
<span class="token punctuation">}</span>
&lt;div class=<span class="token string">&quot;box&quot;</span>&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>padding的简写写法</strong></p><p>padding:100px; 一个值 : 代表上下左右</p><p>padding:100px 50px; 两个值 : 第一个值代表上下 第2个值代表左右</p><p>padding:100px 50px 20px; 三个值: 第一个值代表上 第2个值代表左右 第3个值代表下</p><p>padding:100px 50px 20px 0;四个值: 第一个值上 第二个值右 第三个值下 第四个值左</p></blockquote><h3 id="margin外边距" tabindex="-1"><a class="header-anchor" href="#margin外边距" aria-hidden="true">#</a> margin外边距</h3><blockquote><p>外边距不会影响盒子的大小</p><p>外边距会影响到盒子的位置</p><p>一共有四个方向的外边距</p><p>​ margin-top</p><p>​ --- 上外边距 设置一个正值 元素会往下移动</p><p>​ margin-bottom</p><p>​ ---下外边距 下边的元素会向下移动</p><p>​ margin-right</p><p>​ --- 右外边距 默认情况下设置margin-right不会产生任何的影响</p><p>​ margin-left</p><p>​ --- 左外边距 设置一个正值 元素会向右移动</p><p>​ 注意:margin也可以设置负值,如果是负值则是相反方向去移动</p><p>元素在页面是按照自左往右的顺序排列</p><p>​ 所以默认情况下我们设置左和上外边距是移动元素</p><p>​ 而设置下和右外边距则会移动其他的元素</p><p><strong>margin的简写写法</strong></p><p>margin:100px; 一个值 : 代表上下左右</p><p>margin:100px 50px; 两个值 : 第一个值代表上下 第2个值代表左右</p><p>margin100px 50px 20px; 三个值: 第一个值代表上 第2个值代表左右 第3个值代表下</p><p>margin:100px 50px 20px 0;四个值: 第一个值上 第二个值右 第三个值下 第四个值左</p></blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span><span class="token punctuation">{</span>
		<span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
		<span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
		<span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
		<span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span><span class="token comment">/*块级元素水平排列
    					auto只对外边距有效 代表自动计算的意思 只能实现左右自动居中*/</span>
<span class="token punctuation">}</span>
&lt;div class=<span class="token string">&quot;box&quot;</span>&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="怪异盒模型" tabindex="-1"><a class="header-anchor" href="#怪异盒模型" aria-hidden="true">#</a> 怪异盒模型</h3><blockquote><p>默认情况下,盒子的大小由内容区,内边距,边框共同决定.</p><p>box-sizing 用来设置盒子尺寸的计算方式(width和height的作用)</p><p>​ 可选值:</p><p>​ content-box 默认值 宽度和高度用来设置内容区的大小</p><p>​ border-box 宽度和高度是设置整个盒子的大小</p></blockquote><ul><li>标准模式中，网页元素的宽度是有padding,border,width三者的宽度相加决定的。</li><li>怪异模式中，width包含padding和border的宽度，即网页宽度为width。</li></ul><p><strong>选择怪异还是标准</strong></p><blockquote><p>如果不想因为改变padding的时候盒子的大小也会跟着变化的话就可以使用怪异盒模型,</p><p>而如果想让盒子的大小被padding撑开的话就可以使用标准盒模型</p></blockquote><h3 id="盒子的大小计算不同" tabindex="-1"><a class="header-anchor" href="#盒子的大小计算不同" aria-hidden="true">#</a> 盒子的大小计算不同</h3><p><strong>盒模型的组成，由里向外分别是 content，padding，border，margin</strong></p><p><strong>1.标准盒模型</strong></p><blockquote><p>盒子的左右占位 = width + 左右padding + 左右border + 左右margin</p><p>盒子的上下占位 = height + 上下padding + 上下border + 上下margin</p><p>盒子的宽度 = width + 左右padding + 左右border</p><p>盒子的高度 = height + 上下padding + 上下border</p></blockquote><p><strong>2.怪异盒模型</strong></p><blockquote><p>盒子的左右占位 = width + 左右margin</p><p>盒子的上下占位 = height + 上下margin</p><p>盒子的宽度 = width</p><p>盒子的高度 = height</p></blockquote><h2 id="垂直外边距合并-折叠-现象" tabindex="-1"><a class="header-anchor" href="#垂直外边距合并-折叠-现象" aria-hidden="true">#</a> 垂直外边距合并(折叠)现象</h2><p><strong>发生条件</strong></p><blockquote><p>相邻的块级元素垂直方向会发生重叠现象</p></blockquote><h3 id="兄弟外边距合并" tabindex="-1"><a class="header-anchor" href="#兄弟外边距合并" aria-hidden="true">#</a> 兄弟外边距合并</h3><blockquote><p>兄弟元素间的垂直外边距会取两者之间的最大值(两者都是正值)</p><p>特殊情况</p><p>​ 如果相邻的外边距.一正一负,则取两者的和</p><p>​ 如果相邻的外边距都是负值,则取两者中绝对值较大的.</p><p>兄弟元素之间的外边距的重叠,对于开发是有利的,我们不需要处理.</p></blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>	<span class="token selector">.bro1</span><span class="token punctuation">{</span>
		<span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
		<span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
		<span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
		<span class="token property">margin-bottom</span><span class="token punctuation">:</span>150px<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token selector">.bro2</span><span class="token punctuation">{</span>
		<span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
		<span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
		<span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen<span class="token punctuation">;</span>
		<span class="token property">margin-top</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	 &lt;div class=<span class="token string">&quot;bro1&quot;</span>&gt;&lt;/div&gt;                                                      	   &lt;div class=<span class="token string">&quot;bro2&quot;</span>&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="父子外边距合并" tabindex="-1"><a class="header-anchor" href="#父子外边距合并" aria-hidden="true">#</a> 父子外边距合并</h3><blockquote><p>父子级之间的上外边距会发生合并 是针对于内部第一儿子</p></blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>  <span class="token selector">.fa</span><span class="token punctuation">{</span>
       <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
       <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
       <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token selector">.son</span><span class="token punctuation">{</span>
       <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
       <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
       <span class="token property">background-color</span><span class="token punctuation">:</span>skyblue<span class="token punctuation">;</span>
       <span class="token property">margin-top</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span><span class="token comment">/*此时子元素外边距仿佛变成了父元素的外边距*/</span>
   <span class="token punctuation">}</span>

   &lt;div class=<span class="token string">&quot;fa&quot;</span>&gt;
        &lt;div class=<span class="token string">&quot;son&quot;</span>&gt;&lt;/div&gt;
    &lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>父子外边距合并会影响到页面的布局,必须要进行处理</p><blockquote><p><strong>处理方法</strong></p><p>​ 1.给父级加上border</p><pre><code>    2.给父级加上padding
</code></pre></blockquote>`,46),o=[e];function i(c,l){return s(),a("div",null,o)}const d=n(t,[["render",i],["__file","04.hemoxing.html.vue"]]);export{d as default};
