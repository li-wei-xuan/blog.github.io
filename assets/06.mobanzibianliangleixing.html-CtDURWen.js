import{_ as a,o as s,c as n,a as t}from"./app-EaupiRXX.js";const e={},p=t(`<p>模版字面量类型以字符串字面量类型为基础，且可以展开为多个字符串类型的联合类型。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>type str <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
type hello_word <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>str<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> world</span><span class="token template-punctuation string">\`</span></span> <span class="token comment">// &quot;hello world&quot;</span>

type <span class="token constant">AB</span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">;</span>
type <span class="token constant">CD</span> <span class="token operator">=</span> <span class="token string">&#39;c&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">;</span>

type <span class="token constant">ABCD</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">AB</span> <span class="token operator">|</span> <span class="token constant">CD</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_id</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span> <span class="token comment">// &quot;a_id&quot; | &quot;b_id&quot; | &quot;c_id&quot; | &quot;d_id&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="操作固有字符串的类型" tabindex="-1"><a class="header-anchor" href="#操作固有字符串的类型"><span>操作固有字符串的类型</span></a></h2><p>为了方便字符串操作，TypeScript 提供了一系列操作字符串的类型。<br> 这些类型内置于编译器之中，以便提高性能。</p><h3 id="uppercase-stringtype" tabindex="-1"><a class="header-anchor" href="#uppercase-stringtype"><span>Uppercase&lt;StringType&gt;</span></a></h3><p>将字符串中的每个字符转换为大写字母。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>type str <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
type Str <span class="token operator">=</span> Uppercase<span class="token operator">&lt;</span>str<span class="token operator">&gt;</span> <span class="token comment">// &#39;HELLO&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="lowercase-stringtype" tabindex="-1"><a class="header-anchor" href="#lowercase-stringtype"><span>Lowercase&lt;StringType&gt;</span></a></h3><p>将字符串中的每个字符转换为小写字母。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>type str <span class="token operator">=</span> <span class="token string">&#39;HELLO&#39;</span><span class="token punctuation">;</span>
type Srr <span class="token operator">=</span> Lowercase<span class="token operator">&lt;</span>str<span class="token operator">&gt;</span> <span class="token comment">// &#39;hello&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="capitalize-stringtype" tabindex="-1"><a class="header-anchor" href="#capitalize-stringtype"><span>Capitalize&lt;StringType&gt;</span></a></h3><p>将字符串中的首字母转换为大写字母。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>type str <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
type Str <span class="token operator">=</span> Capitalize<span class="token operator">&lt;</span>str<span class="token operator">&gt;</span> <span class="token comment">// &quot;Hello&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uncapitalize-stringtype" tabindex="-1"><a class="header-anchor" href="#uncapitalize-stringtype"><span>Uncapitalize&lt;StringType&gt;</span></a></h3><p>将字符串中的首字母转换为小写字母。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>type str <span class="token operator">=</span> <span class="token string">&#39;HELLO&#39;</span><span class="token punctuation">;</span>
type Str <span class="token operator">=</span> Uncapitalize<span class="token operator">&lt;</span>str<span class="token operator">&gt;</span> <span class="token comment">// &quot;hELLO&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,16),i=[p];function l(o,r){return s(),n("div",null,i)}const d=a(e,[["render",l],["__file","06.mobanzibianliangleixing.html.vue"]]),u=JSON.parse('{"path":"/docs/TypeScript/06.mobanzibianliangleixing.html","title":"模版自变量类型","lang":"zh-CN","frontmatter":{"title":"模版自变量类型","date":"2024-07-05T00:00:00.000Z","tags":["TypeScript"]},"headers":[{"level":2,"title":"操作固有字符串的类型","slug":"操作固有字符串的类型","link":"#操作固有字符串的类型","children":[{"level":3,"title":"Uppercase<StringType>","slug":"uppercase-stringtype","link":"#uppercase-stringtype","children":[]},{"level":3,"title":"Lowercase<StringType>","slug":"lowercase-stringtype","link":"#lowercase-stringtype","children":[]},{"level":3,"title":"Capitalize<StringType>","slug":"capitalize-stringtype","link":"#capitalize-stringtype","children":[]},{"level":3,"title":"Uncapitalize<StringType>","slug":"uncapitalize-stringtype","link":"#uncapitalize-stringtype","children":[]}]}],"git":{"createdTime":1720431484000,"updatedTime":1720431484000,"contributors":[{"name":"lwj","email":"916215061@qq.com","commits":1}]},"filePathRelative":"docs/TypeScript/06.模版自变量类型.md","readingTime":{"minutes":0.82,"words":246}}');export{d as comp,u as data};
