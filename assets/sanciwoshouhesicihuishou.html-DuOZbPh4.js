import{_ as e,o as i,c as l,a as t}from"./app-EaupiRXX.js";const a={},s=t('<h2 id="三次握手和四次挥手" tabindex="-1"><a class="header-anchor" href="#三次握手和四次挥手"><span>三次握手和四次挥手</span></a></h2><p>TCP协议是一种面向连接的协议，其在建立连接和断开连接时使用了三次握手和四次挥手的过程。</p><h3 id="三次握手" tabindex="-1"><a class="header-anchor" href="#三次握手"><span>三次握手</span></a></h3><ol><li>客户端向服务器发送一个SYN标志的初始序列号（Seq=Client ISN）的数据包，请求建立连接。</li><li>服务器接收到客户端的请求，回复一个ACK标志和SYN标志位都为1，确认序列号（Ack=Client ISN+1），并且发送自己的初始序列号（Seq=Server ISN）给客户端。</li><li>客户端接收到服务器的确认，也回复一个ACK标志位为1，确认序列号（Ack=Server ISN+1），此时连接建立成功。</li></ol><h3 id="四次挥手" tabindex="-1"><a class="header-anchor" href="#四次挥手"><span>四次挥手</span></a></h3><ol><li>客户端发送一个FIN标志位为1的数据包，请求关闭连接。</li><li>服务器接收到请求后，发送一个ACK标志位为1的数据包，告诉客户端已经收到请求。</li><li>服务器向客户端发送一个FIN标志位为1的数据包，请求关闭连接。</li><li>客户端接收到请求后，发送一个ACK标志位为1的数据包，告诉服务器已经收到请求。此时连接关闭。</li></ol><p>在三次握手过程中，客户端首先发送一个请求，然后服务器回复确认，并发送自己的初始序列号。最后，客户端再次回复确认，完成连接的建立。</p><p>在四次挥手过程中，客户端首先发送一个请求，告诉服务器要关闭连接。然后服务器回复确认，并发送自己的请求，告诉客户端也要关闭连接。最后，客户端再次回复确认，完成连接的关闭。</p><p>这些步骤确保了数据在传输过程中不会丢失，并保证了双方都知道连接状态的变化。</p>',9),n=[s];function o(r,c){return i(),l("div",null,n)}const d=e(a,[["render",o],["__file","sanciwoshouhesicihuishou.html.vue"]]),p=JSON.parse('{"path":"/blogs/interview/sanciwoshouhesicihuishou.html","title":"三次握手和四次挥手","lang":"zh-CN","frontmatter":{"title":"三次握手和四次挥手","date":"2023-05-15T00:00:00.000Z","tags":["interview"],"categories":["interview"]},"headers":[{"level":2,"title":"三次握手和四次挥手","slug":"三次握手和四次挥手","link":"#三次握手和四次挥手","children":[{"level":3,"title":"三次握手","slug":"三次握手","link":"#三次握手","children":[]},{"level":3,"title":"四次挥手","slug":"四次挥手","link":"#四次挥手","children":[]}]}],"git":{"createdTime":1684146579000,"updatedTime":1684146579000,"contributors":[{"name":"liweijiang","email":"916215061@qq.com","commits":1}]},"filePathRelative":"blogs/interview/三次握手和四次挥手.md","readingTime":{"minutes":1.67,"words":501}}');export{d as comp,p as data};
