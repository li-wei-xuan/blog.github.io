import{_ as n,o as s,c as a,a as t}from"./app-EaupiRXX.js";const p={},o=t(`<h2 id="什么是数组" tabindex="-1"><a class="header-anchor" href="#什么是数组"><span>什么是数组</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>数组可以理解为有序的（键-值)对组成的数据值的集合  
如果我们把变量理解为单个值的容器，那么数组就是可以包含多个值的容器  
根据索引值的不同数组分为：索引数组和关联数组  
    索引数组：索引为整数,如果没有指定索引值则默认为零，依次递增  
    关联数组：索引为字符串的数组  

$week = array(&quot;a&quot;=&gt; &quot;星期一&quot;, &quot;b&quot;=&gt;&quot;星期二&quot;, &quot;c&quot;=&gt; &quot;星期三&quot;) //a是键，星期一是值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>函数</th><th>函数</th></tr></thead><tbody><tr><td>array()</td><td>创建数组。</td></tr><tr><td>array_change_key_case()</td><td>返回其键均为大写或小写的数组。</td></tr><tr><td>array_chunk()</td><td>把一个数组分割为新的数组块。</td></tr><tr><td>array_column()</td><td>返回输入数组中某个单一列的值。</td></tr><tr><td>array_combine()</td><td>通过合并两个数组（一个为键名数组，一个为键值数组）来创建一个新数组。</td></tr><tr><td>array_count_values()</td><td>用于统计数组中所有值出现的次数。</td></tr><tr><td>array_diff()</td><td>比较数组，返回两个数组的差集（只比较键值）。</td></tr><tr><td>array_diff_assoc()</td><td>比较数组，返回两个数组的差集（比较键名和键值）。</td></tr><tr><td>array_diff_key()</td><td>比较数组，返回两个数组的差集（只比较键名）。</td></tr><tr><td>array_diff_uassoc()</td><td>比较数组，返回两个数组的差集（比较键名和键值，使用用户自定义的键名比较函数）。</td></tr><tr><td>array_diff_ukey()</td><td>比较数组，返回两个数组的差集（只比较键名，使用用户自定义的键名比较函数）。</td></tr><tr><td>array_fill()</td><td>用给定的键值填充数组。</td></tr><tr><td>array_fill_keys()</td><td>用给定的指定键名的键值填充数组。</td></tr><tr><td>array_filter()</td><td>用回调函数过滤数组中的元素。</td></tr><tr><td>array_flip()</td><td>反转/交换数组中的键名和对应关联的键值。</td></tr><tr><td>array_intersect()</td><td>比较数组，返回两个数组的交集（只比较键值）。</td></tr><tr><td>array_intersect_assoc()</td><td>比较数组，返回两个数组的交集（比较键名和键值）。</td></tr><tr><td>array_intersect_key()</td><td>比较数组，返回两个数组的交集（只比较键名）。</td></tr><tr><td>array_intersect_uassoc()</td><td>比较数组，返回两个数组的交集（比较键名和键值，使用用户自定义的键名比较函数）。</td></tr><tr><td>array_intersect_ukey()</td><td>比较数组，返回两个数组的交集（只比较键名，使用用户自定义的键名比较函数）。</td></tr><tr><td>array_key_exists()</td><td>检查指定的键名是否存在于数组中。</td></tr><tr><td>array_key_first()</td><td>获取指定数组的第一个键值。</td></tr><tr><td>array_key_last()</td><td>获取指定数组的最后一个键值。</td></tr><tr><td>array_keys()</td><td>返回数组中所有的键名。</td></tr><tr><td>array_map()</td><td>将用户自定义函数作用到给定数组的每个值上，返回新的值。</td></tr><tr><td>array_merge()</td><td>把一个或多个数组合并为一个数组。</td></tr><tr><td>array_merge_recursive()</td><td>递归地把一个或多个数组合并为一个数组。</td></tr><tr><td>array_multisort()</td><td>对多个数组或多维数组进行排序。</td></tr><tr><td>array_pad()</td><td>将指定数量的带有指定值的元素插入到数组中。</td></tr><tr><td>array_pop()</td><td>删除数组中的最后一个元素（出栈）。</td></tr><tr><td>array_product()</td><td>计算数组中所有值的乘积。</td></tr><tr><td>array_push()</td><td>将一个或多个元素插入数组的末尾（入栈）。</td></tr><tr><td>array_rand()</td><td>从数组中随机选出一个或多个元素，返回键名。</td></tr><tr><td>array_reduce()</td><td>通过使用用户自定义函数，迭代地将数组简化为一个字符串，并返回。</td></tr><tr><td>array_replace()</td><td>使用后面数组的值替换第一个数组的值。</td></tr><tr><td>array_replace_recursive()</td><td>递归地使用后面数组的值替换第一个数组的值。</td></tr><tr><td>array_reverse()</td><td>将原数组中的元素顺序翻转，创建新的数组并返回。</td></tr><tr><td>array_search()</td><td>在数组中搜索给定的值，如果成功则返回相应的键名。</td></tr><tr><td>array_shift()</td><td>删除数组中的第一个元素，并返回被删除元素的值。</td></tr><tr><td>array_slice()</td><td>返回数组中的选定部分。</td></tr><tr><td>array_splice()</td><td>把数组中的指定元素去掉并用其它值取代。</td></tr><tr><td>array_sum()</td><td>返回数组中所有值的和。</td></tr><tr><td>array_udiff()</td><td>比较数组，返回两个数组的差集（只比较键值，使用一个用户自定义的键名比较函数）。</td></tr><tr><td>array_udiff_assoc()</td><td>比较数组，返回两个数组的差集（比较键名和键值，使用内建函数比较键名，使用用户自定义函数比较键值）。</td></tr><tr><td>array_udiff_uassoc()</td><td>比较数组，返回两个数组的差集（比较键名和键值，使用两个用户自定义的键名比较函数）。</td></tr><tr><td>array_uintersect()</td><td>比较数组，返回两个数组的交集（只比较键值，使用一个用户自定义的键名比较函数）。</td></tr><tr><td>array_uintersect_assoc()</td><td>比较数组，返回两个数组的交集（比较键名和键值，使用内建函数比较键名，使用用户自定义函数比较键值）。</td></tr><tr><td>array_uintersect_uassoc()</td><td>比较数组，返回两个数组的交集（比较键名和键值，使用两个用户自定义的键名比较函数）。</td></tr><tr><td>array_unique()</td><td>删除数组中重复的值。</td></tr><tr><td>array_unshift()</td><td>在数组开头插入一个或多个元素。</td></tr><tr><td>array_values()</td><td>返回数组中所有的值。</td></tr><tr><td>array_walk()</td><td>对数组中的每个成员应用用户函数。</td></tr><tr><td>array_walk_recursive()</td><td>对数组中的每个成员递归地应用用户函数。</td></tr><tr><td>arsort()</td><td>对关联数组按照键值进行降序排序。</td></tr><tr><td>asort()</td><td>对关联数组按照键值进行升序排序。</td></tr><tr><td>compact()</td><td>创建一个包含变量名和它们的值的数组。</td></tr><tr><td>count()</td><td>返回数组中元素的数目。</td></tr><tr><td>current()</td><td>返回数组中的当前元素。</td></tr><tr><td>each()</td><td>返回数组中当前的键／值对。</td></tr><tr><td>end()</td><td>将数组的内部指针指向最后一个元素。</td></tr><tr><td>extract()</td><td>从数组中将变量导入到当前的符号表。</td></tr><tr><td>in_array()</td><td>检查数组中是否存在指定的值。</td></tr><tr><td>key()</td><td>从关联数组中取得键名。</td></tr><tr><td>krsort()</td><td>对关联数组按照键名降序排序。</td></tr><tr><td>ksort()</td><td>对关联数组按照键名升序排序。</td></tr><tr><td>list()</td><td>把数组中的值赋给一些数组变量。</td></tr><tr><td>natcasesort()</td><td>用&quot;自然排序&quot;算法对数组进行不区分大小写字母的排序。</td></tr><tr><td>natsort()</td><td>用&quot;自然排序&quot;算法对数组排序。</td></tr><tr><td>next()</td><td>将数组中的内部指针向后移动一位。</td></tr><tr><td>pos()</td><td>current()的别名。</td></tr><tr><td>prev()</td><td>将数组的内部指针倒回一位。</td></tr><tr><td>range()</td><td>创建一个包含指定范围的元素的数组。</td></tr><tr><td>reset()</td><td>将数组的内部指针指向第一个元素。</td></tr><tr><td>rsort()</td><td>对数值数组进行降序排序。</td></tr><tr><td>shuffle()</td><td>把数组中的元素按随机顺序重新排列。</td></tr><tr><td>sizeof()</td><td>count()的别名。</td></tr><tr><td>sort()</td><td>对数值数组进行升序排序。</td></tr><tr><td>uasort()</td><td>使用用户自定义的比较函数对数组中的键值进行排序。</td></tr><tr><td>uksort()</td><td>使用用户自定义的比较函数对数组中的键名进行排序。</td></tr><tr><td>usort()</td><td>使用用户自定义的比较函数对数组进行排序。</td></tr></tbody></table><h3 id="数组判断" tabindex="-1"><a class="header-anchor" href="#数组判断"><span>数组判断</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数搜索数组中是否存在指定的值。
语法：<span class="token function">in_array</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数搜索数组中是否存在指定的值。

例：
<span class="token variable">$sites</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Google&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Runoob&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Taobao&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Facebook&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">in_array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Runoob&quot;</span><span class="token punctuation">,</span> <span class="token variable">$sites</span><span class="token punctuation">)</span> <span class="token comment">//true</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组创建" tabindex="-1"><a class="header-anchor" href="#数组创建"><span>数组创建</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code>数值数组的语法：
  <span class="token keyword">array</span><span class="token punctuation">(</span>value1<span class="token punctuation">,</span>value2<span class="token punctuation">,</span>value3<span class="token punctuation">,</span>etc<span class="token operator">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
关联数组的语法：
  <span class="token keyword">array</span><span class="token punctuation">(</span>key<span class="token operator">=&gt;</span>value<span class="token punctuation">,</span>key<span class="token operator">=&gt;</span>value<span class="token punctuation">,</span>key<span class="token operator">=&gt;</span>value<span class="token punctuation">,</span>etc<span class="token operator">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$cars</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$age</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;35&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Ben&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;37&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Joe&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;43&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">range</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数创建一个包含指定范围的元素的数组。
语法<span class="token punctuation">:</span><span class="token function">range</span><span class="token punctuation">(</span>low<span class="token punctuation">,</span>high<span class="token punctuation">,</span>step<span class="token punctuation">)</span> <span class="token punctuation">(</span>step默认是<span class="token number">1</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span>

  <span class="token variable">$letter</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;I&#39;</span><span class="token punctuation">)</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$letter</span><span class="token punctuation">)</span>

<span class="token function">compact</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	创建一个包含变量名和它们的值的数组。
语法<span class="token punctuation">:</span><span class="token function">compact</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span>var2<span class="token operator">...</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$firstname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$lastname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Griffin&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;41&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;firstname&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;lastname&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [firstname] =&gt; Peter [lastname] =&gt; Griffin [age] =&gt; 41 )</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组键值" tabindex="-1"><a class="header-anchor" href="#数组键值"><span>数组键值</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_change_key_case</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	返回其键均为大写或小写的数组。
语法：<span class="token function">array_change_key_case</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span><span class="token keyword">case</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">case</span>默认值<span class="token punctuation">:</span><span class="token constant">CASE_LOWER</span>

例：
  <span class="token variable">$age</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;35&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Ben&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;37&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Joe&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;43&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_change_key_case</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">,</span><span class="token constant">CASE_UPPER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array([PETER] =&gt; 35 [BEN] =&gt; 37 [JOE] =&gt; 43)</span>

<span class="token function">array_key_exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	检查指定的键名是否存在于数组中。
语法：<span class="token function">array_key_exists</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span><span class="token keyword type-declaration">array</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;XC90&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;X5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token function">array_key_exists</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span><span class="token variable">$a</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string double-quoted-string">&quot;Key exists!&quot;</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;Key does not exist!&quot;</span><span class="token punctuation">;</span>  <span class="token comment">// Key exists!</span>

<span class="token function">array_key_first</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	获取指定数组的第一个键值。
语法：<span class="token function">array_key_first</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">array</span> <span class="token variable">$array</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">mixed</span>

例：
  <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token variable">$firstKey</span> <span class="token operator">=</span> <span class="token function">array_key_first</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token variable">$firstKey</span><span class="token punctuation">;</span> <span class="token comment">//a</span>

<span class="token function">array_key_last</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	获取指定数组的最后一个键值。
语法：<span class="token function">array_key_last</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">array</span> <span class="token variable">$array</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">mixed</span>

例：
  <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token variable">$lastKey</span>  <span class="token operator">=</span> <span class="token function">array_key_last</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token variable">$lastKey</span> <span class="token punctuation">;</span> <span class="token comment">//c</span>

<span class="token function">array_keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	返回数组中所有的键名。
语法：<span class="token function">array_keys</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>value<span class="token punctuation">,</span>strict<span class="token punctuation">)</span>

例：
<span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;XC90&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;X5&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;Highlander&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_keys</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [0] =&gt; Volvo [1] =&gt; BMW [2] =&gt; Toyota )</span>

<span class="token function">array_flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数用于反转<span class="token operator">/</span>交换数组中的键名和对应关联的键值。
语法：<span class="token function">array_flip</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
<span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;d&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$result</span><span class="token operator">=</span><span class="token function">array_flip</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [red] =&gt; a [green] =&gt; b [blue] =&gt; c [yellow] =&gt; d )</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组分割" tabindex="-1"><a class="header-anchor" href="#数组分割"><span>数组分割</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_chunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数把一个数组分割为新的数组块。
语法<span class="token punctuation">:</span><span class="token function">array_chunk</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>size<span class="token punctuation">,</span>preserve_keys<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">case</span>默认值<span class="token punctuation">:</span><span class="token constant">CASE_LOWER</span>

例：
  <span class="token variable">$cars</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Honda&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Mercedes&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Opel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_chunk</span><span class="token punctuation">(</span><span class="token variable">$cars</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组遍历" tabindex="-1"><a class="header-anchor" href="#数组遍历"><span>数组遍历</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_map</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数将用户自定义函数作用到数组中的每个值上，并返回用户自定义函数作用后的带有新的值的数组。
语法：<span class="token function">array_map</span><span class="token punctuation">(</span>myfunction<span class="token punctuation">,</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span>

例：
  <span class="token keyword">function</span> <span class="token function-definition function">myfunction</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
   <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token operator">*</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;myfunction&quot;</span><span class="token punctuation">,</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [0] =&gt; 1 [1] =&gt; 4 [2] =&gt; 9 [3] =&gt; 16 [4] =&gt; 25 )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组过滤" tabindex="-1"><a class="header-anchor" href="#数组过滤"><span>数组过滤</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	用回调函数过滤数组中的元素。
语法：<span class="token function">array_filter</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">array</span> <span class="token variable">$array</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token keyword type-hint">callable</span> <span class="token variable">$callback</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>

例：
  <span class="token keyword">function</span> <span class="token function-definition function">test_odd</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token variable">$var</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;test_odd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [3] =&gt; 3 )</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取数组的值" tabindex="-1"><a class="header-anchor" href="#获取数组的值"><span>获取数组的值</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_column</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 返回输入数组中某个单一列的值。
语法<span class="token punctuation">:</span><span class="token function">array_column</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>column_key<span class="token punctuation">,</span>index_key<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>
    <span class="token keyword">array</span><span class="token punctuation">(</span>
      <span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5698</span><span class="token punctuation">,</span>
      <span class="token string single-quoted-string">&#39;first_name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Peter&#39;</span><span class="token punctuation">,</span>
      <span class="token string single-quoted-string">&#39;last_name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Griffin&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">array</span><span class="token punctuation">(</span>
      <span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">4767</span><span class="token punctuation">,</span>
      <span class="token string single-quoted-string">&#39;first_name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Ben&#39;</span><span class="token punctuation">,</span>
      <span class="token string single-quoted-string">&#39;last_name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Smith&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">array</span><span class="token punctuation">(</span>
      <span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3809</span><span class="token punctuation">,</span>
      <span class="token string single-quoted-string">&#39;first_name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Joe&#39;</span><span class="token punctuation">,</span>
      <span class="token string single-quoted-string">&#39;last_name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Doe&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$last_names</span> <span class="token operator">=</span> <span class="token function">array_column</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;last_name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$last_names</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array([0] =&gt; Griffin [1] =&gt; Smith [2] =&gt; Doe)</span>

<span class="token function">array_values</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数返回包含数组中所有的值的数组（不保留键名）。
语法：<span class="token function">array_values</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Name&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Age&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;41&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Country&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;USA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_values</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [0] =&gt; Peter [1] =&gt; 41 [2] =&gt; USA )</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组差集" tabindex="-1"><a class="header-anchor" href="#数组差集"><span>数组差集</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_diff</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	比较数组，返回两个数组的差集（只比较键值）。
语法：<span class="token function">array_diff</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;d&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;e&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;f&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;g&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$result</span><span class="token operator">=</span><span class="token function">array_diff</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [d] =&gt; yellow )</span>

<span class="token function">array_diff_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	比较数组，返回两个数组的差集（比较键名和键值）。
语法：<span class="token function">array_diff_assoc</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;d&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$result</span><span class="token operator">=</span><span class="token function">array_diff_assoc</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [d] =&gt; yellow )</span>

<span class="token function">array_diff_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	比较数组，返回两个数组的差集（只比较键名）。
语法：<span class="token function">array_diff_key</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;d&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;pink&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$result</span><span class="token operator">=</span><span class="token function">array_diff_key</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [b] =&gt; green )</span>

<span class="token function">array_diff_uassoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	比较数组，返回两个数组的差集（比较键名和键值，使用用户自定义的键名比较函数）。
语法：<span class="token function">array_diff_uassoc</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">,</span>myfunction<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token keyword">function</span> <span class="token function-definition function">myfunction</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">===</span><span class="token variable">$b</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">&gt;</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;d&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;e&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$result</span><span class="token operator">=</span><span class="token function">array_diff_uassoc</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;myfunction&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [a] =&gt; red [c] =&gt; blue )</span>

<span class="token function">array_diff_ukey</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	比较数组，返回两个数组的差集（只比较键名，使用用户自定义的键名比较函数）。
语法：<span class="token function">array_diff_ukey</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">,</span>myfunction<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token keyword">function</span> <span class="token function-definition function">myfunction</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">===</span><span class="token variable">$b</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">&gt;</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;black&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;e&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$result</span><span class="token operator">=</span><span class="token function">array_diff_ukey</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;myfunction&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [c] =&gt; blue )</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组交集" tabindex="-1"><a class="header-anchor" href="#数组交集"><span>数组交集</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_intersect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	比较数组，返回两个数组的交集（只比较键值）。
语法：<span class="token function">array_intersect</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;d&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;e&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;f&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;g&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$result</span><span class="token operator">=</span><span class="token function">array_intersect</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [a] =&gt; red [b] =&gt; green [c] =&gt; blue )</span>

<span class="token function">array_intersect_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	比较数组，返回两个数组的交集（比较键名和键值）。
语法：<span class="token function">array_intersect_assoc</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;d&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$result</span><span class="token operator">=</span><span class="token function">array_intersect_assoc</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [a] =&gt; red [b] =&gt; green [c] =&gt; blue )</span>

<span class="token function">array_intersect_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	比较数组，返回两个数组的交集（只比较键名）。
语法：<span class="token function">array_intersect_key</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;d&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;pink&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$result</span><span class="token operator">=</span><span class="token function">array_intersect_key</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [a] =&gt; red [c] =&gt; blue )</span>

<span class="token function">array_intersect_uassoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	比较数组，返回两个数组的交集（比较键名和键值，使用用户自定义的键名比较函数）。
语法：<span class="token function">array_intersect_uassoc</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">,</span>myfunction<span class="token punctuation">)</span>

例：
  <span class="token keyword">function</span> <span class="token function-definition function">myfunction</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">===</span><span class="token variable">$b</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">&gt;</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;d&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;e&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$result</span><span class="token operator">=</span><span class="token function">array_intersect_uassoc</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;myfunction&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [b] =&gt; green )</span>
<span class="token function">array_intersect_ukey</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	比较数组，返回两个数组的交集（只比较键名，使用用户自定义的键名比较函数）。
语法：<span class="token function">array_intersect_ukey</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">,</span>myfunction<span class="token punctuation">)</span>

例：
  <span class="token keyword">function</span> <span class="token function-definition function">myfunction</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">===</span><span class="token variable">$b</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">&gt;</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;black&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;e&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$result</span><span class="token operator">=</span><span class="token function">array_intersect_ukey</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;myfunction&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [a] =&gt; red [b] =&gt; green )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组统计" tabindex="-1"><a class="header-anchor" href="#数组统计"><span>数组统计</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_count_values</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	用于统计数组中所有值出现的次数。
语法：<span class="token function">array_count_values</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;A&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Cat&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Dog&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;A&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Dog&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_count_values</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [A] =&gt; 2 [Cat] =&gt; 1 [Dog] =&gt; 2 )</span>

<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	返回数组中元素的数目。
语法：<span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>mode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">(</span><span class="token function">mode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> 是否递归<span class="token punctuation">)</span>

例：
  <span class="token variable">$cars</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$cars</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>

<span class="token function">sizeof</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 的别名。
语法：<span class="token function">sizeof</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>mode<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$cars</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token function">sizeof</span><span class="token punctuation">(</span><span class="token variable">$cars</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组填充" tabindex="-1"><a class="header-anchor" href="#数组填充"><span>数组填充</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	用给定的键值填充数组。
语法：<span class="token function">array_fill</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>number<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token function">array_fill</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Array ( [3] =&gt; blue [4] =&gt; blue [5] =&gt; blue [6] =&gt; blue )</span>

<span class="token function">array_fill_keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	用给定的指定键名的键值填充数组。
语法：<span class="token function">array_fill_keys</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$keys</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token function">array_fill_keys</span><span class="token punctuation">(</span><span class="token variable">$keys</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [a] =&gt; blue [b] =&gt; blue [c] =&gt; blue [d] =&gt; blue )</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组替换" tabindex="-1"><a class="header-anchor" href="#数组替换"><span>数组替换</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_replace</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	使用后面数组的值替换第一个数组的值。
语法：<span class="token function">array_replace</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_replace</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Array ( [0] =&gt; blue [1] =&gt; yellow )</span>

<span class="token function">array_replace_recursive</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	递归地使用后面数组的值替换第一个数组的值。
语法：<span class="token function">array_replace_recursive</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;black&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_replace_recursive</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Array ( [a] =&gt; Array ( [0] =&gt; yellow ) [b] =&gt; Array ( [0] =&gt; black [1] =&gt; blue ) )</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组合并" tabindex="-1"><a class="header-anchor" href="#数组合并"><span>数组合并</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_combine</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	通过合并两个数组（一个为键名数组，一个为键值数组）来创建一个新数组。
语法<span class="token punctuation">:</span><span class="token function">array_combine</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$fname</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Ben&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Joe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$age</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;35&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;37&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;43&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token variable">$c</span><span class="token operator">=</span><span class="token function">array_combine</span><span class="token punctuation">(</span><span class="token variable">$fname</span><span class="token punctuation">,</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [Peter] =&gt; 35 [Ben] =&gt; 37 [Joe] =&gt; 43 )</span>

<span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	把一个或多个数组合并为一个数组。
语法<span class="token punctuation">:</span><span class="token function">array_merge</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//Array([a] =&gt; red [b] =&gt; yellow [c] =&gt; blue)</span>

<span class="token function">array_merge_recursive</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	递归地把一个或多个数组合并为一个数组。
语法<span class="token punctuation">:</span><span class="token function">array_merge_recursive</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;yellow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_merge_recursive</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//Array ( [a] =&gt; red [b] =&gt; Array ( [0] =&gt; green [1] =&gt; yellow ) [c] =&gt; blue )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组查找" tabindex="-1"><a class="header-anchor" href="#数组查找"><span>数组查找</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_search</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	在数组中搜索给定的值，如果成功则返回相应的键名。
语法：<span class="token function">array_search</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>strict<span class="token punctuation">)</span>

例：
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//a</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组排序" tabindex="-1"><a class="header-anchor" href="#数组排序"><span>数组排序</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	将原数组中的元素顺序翻转，创建新的数组并返回。
语法：<span class="token function">array_reverse</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>preserve<span class="token punctuation">)</span>

例：
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_reverse</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [c] =&gt; Toyota [b] =&gt; BMW [a] =&gt; Volvo )</span>

<span class="token function">array_multisort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	对多个数组或多维数组进行排序。
语法：<span class="token function">array_multisort</span><span class="token punctuation">(</span>array1<span class="token punctuation">,</span>sorting order<span class="token punctuation">,</span>sorting type<span class="token punctuation">,</span>array2<span class="token punctuation">,</span>array3<span class="token operator">...</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$a1</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$a2</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$num</span><span class="token operator">=</span><span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span><span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">array_multisort</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">,</span><span class="token constant">SORT_DESC</span><span class="token punctuation">,</span><span class="token constant">SORT_NUMERIC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [0] =&gt; 66 [1] =&gt; 41 [2] =&gt; 30 [3] =&gt; 30 [4] =&gt; 25 [5] =&gt; 20 [6] =&gt; 15 [7] =&gt; 7 [8] =&gt; 4 [9] =&gt; 1 )</span>

<span class="token function">arsort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	对关联数组按照键值进行降序排序。
语法：<span class="token function">arsort</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>sortingtype<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$age</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;35&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Ben&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;37&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Joe&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;43&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">arsort</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( &quot;Joe&quot;=&gt;&quot;43&quot;,&quot;Ben&quot;=&gt;&quot;37&quot;,&quot;Peter&quot;=&gt;&quot;35&quot;)</span>

<span class="token function">asort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	对关联数组按照键值进行升序排序。
语法：<span class="token function">asort</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>sortingtype<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$age</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;35&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Ben&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;37&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Joe&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;43&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">asort</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array (&quot;Peter&quot;=&gt;&quot;35&quot;,&quot;Ben&quot;=&gt;&quot;37&quot;,&quot;Joe&quot;=&gt;&quot;43&quot;)</span>

<span class="token function">krsort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	对关联数组按照键名降序排序。
语法：<span class="token function">krsort</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>sortingtype<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$age</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;35&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Ben&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;37&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Joe&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;43&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">krsort</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Array (&quot;Peter&quot;=&gt;&quot;35&quot;,&quot;Joe&quot;=&gt;&quot;43&quot;,&quot;Ben&quot;=&gt;&quot;37&quot;)</span>

<span class="token function">ksort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	对关联数组按照键名升序排序。
语法：<span class="token function">ksort</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>sortingtype<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$age</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;35&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Ben&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;37&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Joe&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;43&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">ksort</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array (&quot;Ben&quot;=&gt;&quot;37&quot;,&quot;Joe&quot;=&gt;&quot;43&quot;，&quot;Peter&quot;=&gt;&quot;35&quot;)</span>

<span class="token function">natcasesort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	用<span class="token string double-quoted-string">&quot;自然排序&quot;</span>算法对数组进行不区分大小写字母的排序。
语法：<span class="token function">natcasesort</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$temp_files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;temp15.txt&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Temp10.txt&quot;</span><span class="token punctuation">,</span>
  <span class="token string double-quoted-string">&quot;temp1.txt&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Temp22.txt&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;temp2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">natcasesort</span><span class="token punctuation">(</span><span class="token variable">$temp_files</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//Array( [2] =&gt; temp1.txt [4] =&gt; temp2.txt [0] =&gt; Temp10.txt [3] =&gt; temp15.txt [1] =&gt; Temp22.txt)</span>

<span class="token function">natsort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	用<span class="token string double-quoted-string">&quot;自然排序&quot;</span>算法对数组排序。
语法：<span class="token function">natsort</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$temp_files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;temp15.txt&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Temp10.txt&quot;</span><span class="token punctuation">,</span>
  <span class="token string double-quoted-string">&quot;temp1.txt&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Temp22.txt&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;temp2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">natsort</span><span class="token punctuation">(</span><span class="token variable">$temp_files</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array( [0] =&gt; Temp10.txt [1] =&gt; Temp22.txt [2] =&gt; temp1.txt [4] =&gt; temp2.txt [3] =&gt; temp15.txt)</span>

<span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	把数组中的元素按随机顺序重新排列。
语法：<span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$my_array</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;yellow&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;purple&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token variable">$my_array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$my_array</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [0] =&gt; blue [1] =&gt; green [2] =&gt; yellow [3] =&gt; red [4] =&gt; purple )</span>

<span class="token function">rsort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	对数值数组进行降序排序。
语法：<span class="token function">rsort</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>sortingtype<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$cars</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">rsort</span><span class="token punctuation">(</span><span class="token variable">$cars</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Volvo Toyota BMW</span>

<span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	对数值数组进行升序排序。
语法：<span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>sortingtype<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token variable">$cars</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">sort</span><span class="token punctuation">(</span><span class="token variable">$cars</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//BMW Toyota Volvo</span>

<span class="token function">uasort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	使用用户自定义的比较函数对数组中的键值进行排序。
语法：<span class="token function">uasort</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>myfunction<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token keyword">function</span> <span class="token function-definition function">my_sort</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">==</span><span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">&lt;</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$arr</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token number">8</span><span class="token punctuation">,</span>d<span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">uasort</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;my_sort&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array (b=&gt;2,a=&gt;4,d=&gt;6,c=&gt;8)</span>

<span class="token function">uksort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	使用用户自定义的比较函数对数组中的键名进行排序。
语法：<span class="token function">uksort</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>myfunction<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token keyword">function</span> <span class="token function-definition function">my_sort</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">==</span><span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">&lt;</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$arr</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token number">8</span><span class="token punctuation">,</span>d<span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">uksort</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;my_sort&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array (&quot;a&quot;=&gt;4,&quot;b&quot;=&gt;2,&quot;c&quot;=&gt;8,d=&gt;&quot;6&quot;)</span>

<span class="token function">usort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	使用用户自定义的比较函数对数组进行排序。
语法：<span class="token function">usort</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>myfunction<span class="token punctuation">)</span><span class="token punctuation">;</span>

例：
  <span class="token keyword">function</span> <span class="token function-definition function">my_sort</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">==</span><span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">&lt;</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">usort</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;my_sort&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//2 4 6 8</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加元素" tabindex="-1"><a class="header-anchor" href="#添加元素"><span>添加元素</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_unshift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	在数组开头插入一个或多个元素。

例<span class="token punctuation">:</span>
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">array_unshift</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [0] =&gt; blue [a] =&gt; red [b] =&gt; green )</span>

<span class="token function">array_push</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数向数组尾部插入一个或多个元素。

例：
    <span class="token variable">$stack</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;orange&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;banana&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$stack</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;raspberry&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$stack</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;Dog&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;Cat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Horse&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Bird&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">array_pad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数将指定数量的带有指定值的元素插入到数组中。
语法：<span class="token function">array_pad</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>size<span class="token punctuation">,</span>value<span class="token punctuation">)</span>

例：
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_pad</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [0] =&gt; red [1] =&gt; green [2] =&gt; blue [3] =&gt; blue [4] =&gt; blue )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组计算" tabindex="-1"><a class="header-anchor" href="#数组计算"><span>数组计算</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">array_product</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	计算数组中所有值的乘积。
语法：<span class="token function">array_product</span><span class="token punctuation">(</span><span class="token keyword type-casting">array</span><span class="token punctuation">)</span>

例：
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">array_product</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//25</span>

<span class="token function">array_sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数返回数组中所有值的总和。
如果所有值多是整数，则返回一个整数值。如果其中有一个或多个值是浮点数，则返回浮点数。

例：
    <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;5&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;15&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token function">array_sum</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组删除" tabindex="-1"><a class="header-anchor" href="#数组删除"><span>数组删除</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">unset</span> 释放给定的变量<span class="token punctuation">(</span>注意：删除数组元素不会重建索引<span class="token punctuation">)</span>

例：
  <span class="token variable">$fruits</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;apple&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;orange&#39;</span><span class="token punctuation">)</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$fruits</span><span class="token punctuation">)</span>
  <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$fruits</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$fruits</span><span class="token punctuation">)</span>

<span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 删除数组中的最后一个元素
返回值：返回数组的最后一个值。如果数组是空的，或者不是一个数组，将返回 <span class="token constant">NULL</span>。

例：
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [0] =&gt; red [1] =&gt; green )</span>

<span class="token function">array_shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	删除数组中的第一个元素，并返回被删除元素的值。
返回值：返回从数组中删除元素的值，如果数组为空则返回 <span class="token constant">NULL</span>。

例：
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token function">array_shift</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//red</span>
  <span class="token function">print_r</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [0] =&gt; green [1] =&gt; blue )</span>

<span class="token function">array_unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	删除数组中重复的值。
返回值：返回过滤后的数组。

例：
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_unique</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [a] =&gt; red [b] =&gt; green )</span>

<span class="token function">array_slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	返回数组中的选定部分。
语法：<span class="token function">array_slice</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token punctuation">,</span>start<span class="token punctuation">,</span>length<span class="token punctuation">,</span>preserve<span class="token punctuation">)</span>

例：
  <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;red&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;blue&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;yellow&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;brown&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_slice</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Array ( [0] =&gt; blue [1] =&gt; yellow [2] =&gt; brown )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串与数组转换" tabindex="-1"><a class="header-anchor" href="#字符串与数组转换"><span>字符串与数组转换</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">explode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数把字符串打散为数组。

例：
  <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;1,2,3,4,5,6&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">implode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 函数将数组元素连接成字符

例：
    <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;|&#39;</span><span class="token punctuation">,</span> <span class="token variable">$arr</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41),e=[o];function u(c,l){return s(),a("div",null,e)}const r=n(p,[["render",u],["__file","06.shuzuhanshu.html.vue"]]),k=JSON.parse('{"path":"/docs/PHP/06.shuzuhanshu.html","title":"数组函数","lang":"zh-CN","frontmatter":{"title":"数组函数","date":"2022-11-22T00:00:00.000Z","tags":["php"]},"headers":[{"level":2,"title":"什么是数组","slug":"什么是数组","link":"#什么是数组","children":[{"level":3,"title":"数组判断","slug":"数组判断","link":"#数组判断","children":[]},{"level":3,"title":"数组创建","slug":"数组创建","link":"#数组创建","children":[]},{"level":3,"title":"数组键值","slug":"数组键值","link":"#数组键值","children":[]},{"level":3,"title":"数组分割","slug":"数组分割","link":"#数组分割","children":[]},{"level":3,"title":"数组遍历","slug":"数组遍历","link":"#数组遍历","children":[]},{"level":3,"title":"数组过滤","slug":"数组过滤","link":"#数组过滤","children":[]},{"level":3,"title":"获取数组的值","slug":"获取数组的值","link":"#获取数组的值","children":[]},{"level":3,"title":"数组差集","slug":"数组差集","link":"#数组差集","children":[]},{"level":3,"title":"数组交集","slug":"数组交集","link":"#数组交集","children":[]},{"level":3,"title":"数组统计","slug":"数组统计","link":"#数组统计","children":[]},{"level":3,"title":"数组填充","slug":"数组填充","link":"#数组填充","children":[]},{"level":3,"title":"数组替换","slug":"数组替换","link":"#数组替换","children":[]},{"level":3,"title":"数组合并","slug":"数组合并","link":"#数组合并","children":[]},{"level":3,"title":"数组查找","slug":"数组查找","link":"#数组查找","children":[]},{"level":3,"title":"数组排序","slug":"数组排序","link":"#数组排序","children":[]},{"level":3,"title":"添加元素","slug":"添加元素","link":"#添加元素","children":[]},{"level":3,"title":"数组计算","slug":"数组计算","link":"#数组计算","children":[]},{"level":3,"title":"数组删除","slug":"数组删除","link":"#数组删除","children":[]},{"level":3,"title":"字符串与数组转换","slug":"字符串与数组转换","link":"#字符串与数组转换","children":[]}]}],"git":{"createdTime":1679887873000,"updatedTime":1679887873000,"contributors":[{"name":"liweijiang","email":"916215061@qq.com","commits":1}]},"filePathRelative":"docs/PHP/06.数组函数.md","readingTime":{"minutes":15.95,"words":4785}}');export{r as comp,k as data};
