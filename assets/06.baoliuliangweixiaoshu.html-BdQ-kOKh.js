import{_ as n,o as s,c as a,a as t}from"./app-EaupiRXX.js";const e={},p=t(`<h1 id="四舍五入保留小数" tabindex="-1"><a class="header-anchor" href="#四舍五入保留小数"><span>四舍五入保留小数</span></a></h1><h2 id="tofix-n" tabindex="-1"><a class="header-anchor" href="#tofix-n"><span>toFix(n)</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//四舍五入</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">123.123</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//123.12</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">123.129</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//123.13</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="不四舍五入保留小数" tabindex="-1"><a class="header-anchor" href="#不四舍五入保留小数"><span>不四舍五入保留小数</span></a></h1><h2 id="math-floor-和-math-ceil" tabindex="-1"><a class="header-anchor" href="#math-floor-和-math-ceil"><span>Math.floor() 和 Math.ceil()</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">123.123</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>num<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment">//123.12</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>num<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment">//123.13</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="parseint" tabindex="-1"><a class="header-anchor" href="#parseint"><span>parseInt()</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">123.123</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>num <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment">//123.12</span>
<span class="token comment">//尾数为零不保留</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">123.003</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>num <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment">//123</span>
<span class="token comment">//尾数为零保留</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">123.003</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>num <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">//123.00</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式"><span>正则表达式</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">123.123</span>
<span class="token comment">//这里使用正则表达式来进行处理</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d+(?:\\.\\d{0,2})?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//123.12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","06.baoliuliangweixiaoshu.html.vue"]]),k=JSON.parse('{"path":"/docs/JavaScript/06.baoliuliangweixiaoshu.html","title":"保留两位小数","lang":"zh-CN","frontmatter":{"title":"保留两位小数","date":"2022-10-10T00:00:00.000Z","tags":["JavaScript"],"categories":["JavaScript"]},"headers":[{"level":2,"title":"toFix(n)","slug":"tofix-n","link":"#tofix-n","children":[]},{"level":2,"title":"Math.floor() 和 Math.ceil()","slug":"math-floor-和-math-ceil","link":"#math-floor-和-math-ceil","children":[]},{"level":2,"title":"parseInt()","slug":"parseint","link":"#parseint","children":[]},{"level":2,"title":"正则表达式","slug":"正则表达式","link":"#正则表达式","children":[]}],"git":{"createdTime":1679887873000,"updatedTime":1679887873000,"contributors":[{"name":"liweijiang","email":"916215061@qq.com","commits":1}]},"filePathRelative":"docs/JavaScript/06.保留两位小数.md","readingTime":{"minutes":0.59,"words":176}}');export{r as comp,k as data};
