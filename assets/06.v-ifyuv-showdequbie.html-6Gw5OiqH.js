import{_ as e,o as i,c as t,a as s}from"./app-EaupiRXX.js";const a={},l=s(`<h2 id="共同点" tabindex="-1"><a class="header-anchor" href="#共同点"><span>共同点</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>在 vue 中 v-show 与 v-if 的作用效果是相同的，都能控制元素在页面是否显示 。
	当表达式都为 false 时，都不会占据页面位置
	当表达式结果为 true 时，都会占据页面的位置
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别"><span>区别</span></a></h2><ol><li><strong>控制手段：</strong> v-show隐藏则是为该元素添加css--display:none，dom元素依旧还在。v-if显示隐藏是将dom元素整个添加或删除</li><li><strong>编译过程：</strong> v-if切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件；v-show只是简单的基于css切换</li><li><strong>编译条件：</strong> v-if是真正的条件渲染，它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。只有渲染条件为假时，并不做操作，直到为真才渲染</li></ol><div class="custom-container danger"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M10 10l4 4m0-4l-4 4"></path></g></svg><p class="custom-container-title">DANGER</p><ol><li>v-show 由false变为true的时候不会触发组件的生命周期</li><li>v-if由false变为true的时候，触发组件的beforeCreate、create、beforeMount、mounted钩子，由true变为false的时候触发组件的beforeDestory、destoryed方法</li></ol></div><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>v-if 与 v-show 都能控制dom元素在页面的显示
v-if 相比 v-show 开销更大的（直接操作dom节点增加与删除）
如果需要非常频繁地切换，则使用 v-show 较好
如果在运行时条件很少改变，则使用 v-if 较好
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>v-show 是通过控制display属性来进行dom的显示与隐藏
v-if 是真正意义上的条件渲染，为true是渲染（dom存在），为false时不存在（dom不存在）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,9),n=[l];function d(r,o){return i(),t("div",null,n)}const v=e(a,[["render",d],["__file","06.v-ifyuv-showdequbie.html.vue"]]),u=JSON.parse('{"path":"/docs/Vue/06.v-ifyuv-showdequbie.html","title":"v-if与v-show的区别","lang":"zh-CN","frontmatter":{"title":"v-if与v-show的区别","date":"2022-10-19T00:00:00.000Z","tags":["vue","interview"],"categories":["vue","interview"]},"headers":[{"level":2,"title":"共同点","slug":"共同点","link":"#共同点","children":[]},{"level":2,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1679887873000,"updatedTime":1679887873000,"contributors":[{"name":"liweijiang","email":"916215061@qq.com","commits":1}]},"filePathRelative":"docs/Vue/06.v-if与v-show的区别.md","readingTime":{"minutes":1.53,"words":458}}');export{v as comp,u as data};
